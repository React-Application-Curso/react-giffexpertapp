{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GrifGidItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAUT,EACVU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACjC,MAAO,CACHF,KACAC,QACAT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QATpB,kBAYXM,GAZW,4CAAH,sDCEVM,EAAc,SAAC,GAAkB,EAAjBJ,GAAkB,IAAfC,EAAc,EAAdA,MAAOT,EAAO,EAAPA,IACnC,OACI,sBAAKa,UAAU,yCAAf,UACA,qBAAKC,IAAMd,EAAKe,IAAON,IACpB,4BAAIA,QCDFO,EAAU,SAAC,GAAe,IAAdlB,EAAa,EAAbA,SAAa,ECFV,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLY,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAoBxC,OAdAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GAECH,EAAU,CACNd,KAAMiB,EACNL,SAAS,SAK1B,CAAEnB,IAGEoB,EDjByBK,CAAazB,GAAhCY,EADqB,EAC1BL,KAAaY,EADa,EACbA,QAGrB,OACI,eAAC,WAAD,WACI,oBAAIJ,UAAY,oCAAhB,SAAqDf,IACnDmB,GAAW,mBAAGJ,UAAY,mCAAf,qBACb,qBAAKA,UAAW,YAAhB,SAEQH,EAAOH,KAAK,SAAAiB,GAAG,OACX,cAAC,EAAD,eAESA,GADEA,EAAIhB,aEZjCiB,EAAe,WAAM,MAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAUvB,OACI,eAAC,WAAD,WACI,gDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACSA,SAAaA,GADLA,YAWrC2B,EAAaE,aAAe,GAEbF,Q,MC/BfG,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.6d7e2a6c.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('Submit hecho')\r\n        if(inputValue.trim().length>2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","   export const getGifs = async (category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=vuzfNaKn4EaShKV9fn0IAqmJVIH9zeWt`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n       \r\n        const gifs = data.map( ({ id, title, images }) => {\r\n            return {\r\n                id ,\r\n                title,\r\n                url: images?.downsized_medium.url            \r\n            }\r\n        });\r\n        return gifs;\r\n    };","import React from 'react';\r\n\r\nexport const GrifGidItem = ({id,title, url})=>{\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n        <img src ={url} alt = {title}/>\r\n           <p>{title}</p> \r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GrifGidItem } from './GifGridItem';\r\n// import PropTypes from 'prop-types'\r\n\r\nexport const GifGrid = ({category}) =>{\r\n    const { data:images, loading} = useFetchGifs(category);\r\n    \r\n \r\n    return (\r\n        <Fragment>\r\n            <h3 className = 'animate__animated animate__fadeIn'>{category}</h3>\r\n            { loading && <p className = 'animate__animated animate__flash'>Loading</p> }\r\n            <div className =\"card-grid\">                \r\n                {\r\n                    images.map( img => (\r\n                        <GrifGidItem \r\n                            key = {img.id}\r\n                            { ...img }\r\n                        />\r\n\r\n                    ))\r\n                }                \r\n            </div> \r\n        </Fragment>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category)\r\n            .then( imgs => {\r\n                // setTimeout( () => {\r\n                    setstate ({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                // },1000)\r\n               \r\n            });\r\n    }, [ category ]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState, Fragment } from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai X','Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    // const handleAdd = () => {\r\n    //     // setCategories([...categories, 'HunterXHunter']);\r\n    //     setCategories(cats => [...cats, 'HunterXHunter']);\r\n    // <button onClick={ handleAdd }>Agregar</button>\r\n\r\n    // }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2> GifExpertApp </h2> \r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n            {\r\n                categories.map( category => (\r\n                    <GifGrid key = { category } \r\n                             category = { category } />\r\n                   /* return <li key={category}>{category}</li>*/\r\n                ))\r\n            }\r\n            </ol>\r\n        </Fragment>            \r\n    );\r\n}\r\nGifExpertApp.propTypes = {\r\n}\r\nGifExpertApp.defaultProps = {\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n   <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}